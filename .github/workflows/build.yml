name: Build Il2CppInspector

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  SOLUTION_FILE: Il2CppInspector.sln
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - platform: win-x64
            runtime: win-x64
            artifact: Il2CppInspector-Windows
          - platform: linux-x64
            runtime: linux-x64
            artifact: Il2CppInspector-Linux
          - platform: osx-x64
            runtime: osx-x64
            artifact: Il2CppInspector-macOS

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Download and prepare plugins
      shell: pwsh
      run: |
        # 创建插件目录
        New-Item -ItemType Directory -Force -Path plugins
        
        # 定义插件列表
        $plugins = @(
          @{
            Name = "Il2CppHook"
            Url = "https://github.com/dnSpyEx/dnSpy/releases/latest/download/dnSpy-net-win64.zip"
          }
          # 添加其他插件下载链接
        )
        
        # 下载并解压插件
        foreach ($plugin in $plugins) {
          $tempFile = [System.IO.Path]::GetTempFileName()
          
          # 下载插件
          Invoke-WebRequest -Uri $plugin.Url -OutFile $tempFile
          
          # 重命名为zip
          $zipFile = $tempFile + ".zip"
          Rename-Item -Path $tempFile -NewName $zipFile
          
          # 创建插件目录
          $pluginDir = Join-Path "plugins" $plugin.Name
          New-Item -ItemType Directory -Force -Path $pluginDir
          
          # 解压插件
          Expand-Archive -Path $zipFile -DestinationPath $pluginDir -Force
          
          # 清理临时文件
          Remove-Item $zipFile -Force
        }

    - name: Build CLI
      run: |
        dotnet publish Il2CppInspector.CLI/Il2CppInspector.CLI.csproj `
          -c ${{ env.BUILD_CONFIGURATION }} `
          -r ${{ matrix.runtime }} `
          --self-contained true `
          -p:PublishSingleFile=true `
          -o publish/cli

    - name: Build GUI (Windows only)
      if: matrix.platform == 'win-x64'
      run: |
        dotnet publish Il2CppInspector.GUI/Il2CppInspector.GUI.csproj `
          -c ${{ env.BUILD_CONFIGURATION }} `
          -r ${{ matrix.runtime }} `
          --self-contained true `
          -p:PublishSingleFile=true `
          -o publish/gui

    - name: Copy plugins
      shell: pwsh
      run: |
        Copy-Item -Path plugins -Destination publish/cli/plugins -Recurse -Force
        if ('${{ matrix.platform }}' -eq 'win-x64') {
          Copy-Item -Path plugins -Destination publish/gui/plugins -Recurse -Force
        }

    - name: Create ZIP archives
      shell: pwsh
      run: |
        Compress-Archive -Path publish/cli/* -DestinationPath ${{ matrix.artifact }}-CLI.zip -Force
        if ('${{ matrix.platform }}' -eq 'win-x64') {
          Compress-Archive -Path publish/gui/* -DestinationPath ${{ matrix.artifact }}-GUI.zip -Force
        }

    - name: Upload CLI artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}-CLI
        path: ${{ matrix.artifact }}-CLI.zip

    - name: Upload GUI artifact (Windows only)
      if: matrix.platform == 'win-x64'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}-GUI
        path: ${{ matrix.artifact }}-GUI.zip

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
